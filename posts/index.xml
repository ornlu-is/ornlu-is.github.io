<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Luís Franco</title><link>https://ornlu-is.github.io/posts/</link><description>All Posts | Luís Franco</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 29 Mar 2023 22:57:58 +0100</lastBuildDate><atom:link href="https://ornlu-is.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Adventures in Overengineering 4: using Terraform for Kubernetes namespace creation</title><link>https://ornlu-is.github.io/overengineering_adventures_4/</link><pubDate>Wed, 29 Mar 2023 22:57:58 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_adventures_4/</guid><description><![CDATA[This post has one very simple and short goal: to use Terraform to create a Kubernetes namespace to which we will migrate the application that we&rsquo;ve been working on. Now, you might ask yourself: &ldquo;Is it overkill to use Terraform just to create Kubernetes namespaces?&rdquo; To which the answer is: yes, yes it is. But will that stop me? Short answer &ldquo;no&rdquo;, long answer &ldquo;no, it will not&rdquo;. The name of the series is &ldquo;Adventures in Overengineering&rdquo; and I plan to remain faithful to that name until I run out of ideas.]]></description></item><item><title>Adventures in Overengineering 3: manning the Helm</title><link>https://ornlu-is.github.io/overengineering_adventures_3/</link><pubDate>Sun, 26 Mar 2023 23:35:24 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_adventures_3/</guid><description>Ahoy! It&amp;rsquo;s time to include Helm in our project! Why? Three reasons: making our life easier when it comes to managing Kubernetes resources, staying true to the overengineering game by introducing yet another tool, and will also allow me to write more pirate related puns than what should be legally allowed. I apologize in advance for my terrible sense of humour. It is recommended to read this post while listening to &amp;ldquo;Under Jolly Roger&amp;rdquo; by Running Wild or any other pirate song.</description></item><item><title>Adventures in Overengineering 2: a better Docker image</title><link>https://ornlu-is.github.io/overengineering_adventures_2/</link><pubDate>Tue, 21 Mar 2023 20:25:26 +0000</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_adventures_2/</guid><description>Last post, we managed to do the following:
created a Kubernetes clusters using microk8s; created a very simple Golang web server and its Docker image; created a Kubernetes deployment for the web server and a service to expose it. In this post, we will improve on the Docker image we previously built because we can always do better and that is the point of this whole series: each post must represent an improvement on the previous post, either by enhancing capabilities or employing better practices.</description></item><item><title>Adventures in Overengineering 1: deploying a Golang web server</title><link>https://ornlu-is.github.io/overengineering_adventures_1/</link><pubDate>Wed, 15 Mar 2023 20:46:20 +0000</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_adventures_1/</guid><description>There is a wide variety of blog posts on the internet teaching one how to create a simple web server in Golang. But most of them are incredibly boring and minor variations of each other. So I&amp;rsquo;m going to take a different approach: I&amp;rsquo;m going to deploy a simple REST API in Golang. Notice that I said deploy, not create, which means that my first step is a tiny bit different.</description></item></channel></rss>