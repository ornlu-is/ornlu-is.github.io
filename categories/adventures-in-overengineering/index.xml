<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Adventures in Overengineering - Category - Luís Franco</title><link>https://ornlu-is.github.io/categories/adventures-in-overengineering/</link><description>Adventures in Overengineering - Category - Luís Franco</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 30 Oct 2023 10:46:29 +0000</lastBuildDate><atom:link href="https://ornlu-is.github.io/categories/adventures-in-overengineering/" rel="self" type="application/rss+xml"/><item><title>Adventures in Overengineering 5: Monitoring Raspberry Pi Machines with Prometheus and Grafana</title><link>https://ornlu-is.github.io/overengineering_5/</link><pubDate>Mon, 30 Oct 2023 10:46:29 +0000</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_5/</guid><description>With Node Exporter installed in each of the Raspberry Pi machines, I can now start scraping these metrics and actually using them to build a dashboard to monitor my machines. And this is also the step in which I create a GitHub repository where all scripts and configuration files used are stored, just in case my laptop decides to perish a second time and I have to go through this all over again (RIP my old SSD).</description></item><item><title>Adventures in Overengineering 4: Installing Node Exporter via Salt</title><link>https://ornlu-is.github.io/overengineering_4/</link><pubDate>Sat, 28 Oct 2023 13:49:05 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_4/</guid><description>I have a bunch of physical machines and it is important to keep track of how healthy these machines are. More specifically, I want to keep track of some key metrics such as how much CPU or memory is being used and disk space. Additionally, I also want to keep track of the temperature of these machines because I do not want to accidentally burn down my house (that would really destroy the budget for this project).</description></item><item><title>Adventures in Overengineering 3: Installing Salt to manage Raspberry Pi machines</title><link>https://ornlu-is.github.io/overengineering_3/</link><pubDate>Tue, 10 Oct 2023 19:36:10 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_3/</guid><description>I have three machines with Ubuntu installs up and running but there is one thing that I really want to avoid: having to ssh into them to install software, since the effort of installing a given package/software is always multiplied by three. As such, I thought this was an appropriate time to refresh my Salt knowledge, which is an event-driven framework/automation tool whose name probably derives from the high blood pressure it induces whenever it is used to perform changes on production environment machines.</description></item><item><title>Adventures in Overengineering 2: Installing an Operating System</title><link>https://ornlu-is.github.io/overengineering_2/</link><pubDate>Thu, 28 Sep 2023 21:40:34 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_2/</guid><description>Now that I have some hardware available, I need to install an operating system on these machines so that I can then install some software that will enable me to actually do something with these things. Since I do not want to have to connect a monitor to these machines every time I need to use them, I also have to set up some type of remote access.
Other posts in this series Adventures in Overengineering 1: Inventory Adventures in Overengineering 3: Installing Salt to manage Raspberry Pi machines Adventures in Overengineering 4: Installing Node Exporter via Salt Adventures in Overengineering 5: Monitoring Raspberry Pi Machines with Prometheus and Grafana Preparing the microSD cards This part is extremely simple.</description></item><item><title>Adventures in Overengineering 1: Inventory</title><link>https://ornlu-is.github.io/overengineering_1/</link><pubDate>Thu, 28 Sep 2023 16:17:45 +0100</pubDate><author>Luís Franco</author><guid>https://ornlu-is.github.io/overengineering_1/</guid><description>A few months ago, I started a series of posts about my attempt to completely overengineer a simple Go web server. After a few posts, I had to archive that series. I was not pleased with the result, it wasn&amp;rsquo;t&amp;hellip; enough. Last time, I began this adventure by running a Kubernetes instance on my laptop. This time, I&amp;rsquo;ve gone deeper into the overengineering madness. Keep in mind that the end goal is still to deploy a very basic Golang web server.</description></item></channel></rss>